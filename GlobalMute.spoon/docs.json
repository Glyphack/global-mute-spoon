[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Accessible variable to adjust the logging level",
        "stripped_doc" : [
          "Accessible variable to adjust the logging level"
        ],
        "name" : "logger",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "Accessible variable to adjust the logging level",
        "def" : "GlobalMute.logger"
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "With this Spoon you will be able ot globally mute and unmute your Microphone devices.",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "doc" : "With this Spoon you will be able ot globally mute and unmute your Microphone devices.\n[https:\/\/github.com\/cmaahs\/global-mute-spoon](https:\/\/github.com\/cmaahs\/global-mute-spoon)\n\nThis spoon was inspired by one of my previous co-workers: https:\/\/github.com\/jesselang\/dotfiles",
    "Method" : [
      {
        "doc" : "Mute all system sound input, force to mute",
        "stripped_doc" : [
          "Mute all system sound input, force to mute"
        ],
        "name" : "toggle",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:toggle()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Mute all system sound input, force to mute",
        "def" : "GlobalMute:toggle()"
      },
      {
        "doc" : "Mute all system sound input, force to mute",
        "stripped_doc" : [
          "Mute all system sound input, force to mute"
        ],
        "name" : "mute",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:mute(force)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Mute all system sound input, force to mute",
        "def" : "GlobalMute:mute(force)"
      },
      {
        "doc" : "UnMute all system sound input",
        "stripped_doc" : [
          "UnMute all system sound input"
        ],
        "name" : "unmute",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:unmute()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "UnMute all system sound input",
        "def" : "GlobalMute:unmute()"
      },
      {
        "doc" : "Callback function when audio input events happen",
        "stripped_doc" : [
          "Callback function when audio input events happen"
        ],
        "name" : "microphone_changes",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:microphone_changes(device_uid, event_name, event_scope, event_element)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Callback function when audio input events happen",
        "def" : "GlobalMute:microphone_changes(device_uid, event_name, event_scope, event_element)"
      },
      {
        "doc" : "Binds hotkeys for GlobalMute\n\nParameters:\n * applist - A table containing hotkey details for defined applications:\n\nA configuration example:\n``` lua\nlocal hyper = {\"ctrl\", \"alt\", \"cmd\"}\nhs.loadSpoon(\"GlobalMute\")\nspoon.GlobalMute:configure({\n  unmute_background = 'file:\/\/\/Library\/Desktop%20Pictures\/Solid%20Colors\/Red%20Orange.png',\n  mute_background   = 'file:\/\/\/Library\/Desktop%20Pictures\/Solid%20Colors\/Turquoise%20Green.png',\n  enforce_desired_state = true,\n})\nspoon.GlobalMute:bindHotkeys({\n unmute = {hyper, \"u\"},\n mute   = {hyper, \"m\"},\n toggle = {hyper, \"space\"}\n})\nspoon.GlobalMute._logger.level = 3\n```",
        "stripped_doc" : [
          "Binds hotkeys for GlobalMute",
          ""
        ],
        "name" : "bindHotkeys",
        "parameters" : [
          " * applist - A table containing hotkey details for defined applications:",
          "",
          "A configuration example:",
          "``` lua",
          "local hyper = {\"ctrl\", \"alt\", \"cmd\"}",
          "hs.loadSpoon(\"GlobalMute\")",
          "spoon.GlobalMute:configure({",
          "  unmute_background = 'file:\/\/\/Library\/Desktop%20Pictures\/Solid%20Colors\/Red%20Orange.png',",
          "  mute_background   = 'file:\/\/\/Library\/Desktop%20Pictures\/Solid%20Colors\/Turquoise%20Green.png',",
          "  enforce_desired_state = true,",
          "})",
          "spoon.GlobalMute:bindHotkeys({",
          " unmute = {hyper, \"u\"},",
          " mute   = {hyper, \"m\"},",
          " toggle = {hyper, \"space\"}",
          "})",
          "spoon.GlobalMute._logger.level = 3",
          "```"
        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:bindHotkeys()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Binds hotkeys for GlobalMute",
        "def" : "GlobalMute:bindHotkeys()"
      },
      {
        "doc" : "Set spoon level configuration",
        "stripped_doc" : [
          "Set spoon level configuration"
        ],
        "name" : "configure",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:configure(conf)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Set spoon level configuration",
        "def" : "GlobalMute:configure(conf)"
      },
      {
        "doc" : "Currently does nothing (implemented so that treating this Spoon like others won't cause errors).",
        "stripped_doc" : [
          "Currently does nothing (implemented so that treating this Spoon like others won't cause errors)."
        ],
        "name" : "init",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:init()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Currently does nothing (implemented so that treating this Spoon like others won't cause errors).",
        "def" : "GlobalMute:init()"
      }
    ],
    "Command" : [

    ],
    "items" : [
      {
        "doc" : "Accessible variable to adjust the logging level",
        "stripped_doc" : [
          "Accessible variable to adjust the logging level"
        ],
        "name" : "logger",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "Accessible variable to adjust the logging level",
        "def" : "GlobalMute.logger"
      },
      {
        "doc" : "Binds hotkeys for GlobalMute\n\nParameters:\n * applist - A table containing hotkey details for defined applications:\n\nA configuration example:\n``` lua\nlocal hyper = {\"ctrl\", \"alt\", \"cmd\"}\nhs.loadSpoon(\"GlobalMute\")\nspoon.GlobalMute:configure({\n  unmute_background = 'file:\/\/\/Library\/Desktop%20Pictures\/Solid%20Colors\/Red%20Orange.png',\n  mute_background   = 'file:\/\/\/Library\/Desktop%20Pictures\/Solid%20Colors\/Turquoise%20Green.png',\n  enforce_desired_state = true,\n})\nspoon.GlobalMute:bindHotkeys({\n unmute = {hyper, \"u\"},\n mute   = {hyper, \"m\"},\n toggle = {hyper, \"space\"}\n})\nspoon.GlobalMute._logger.level = 3\n```",
        "stripped_doc" : [
          "Binds hotkeys for GlobalMute",
          ""
        ],
        "name" : "bindHotkeys",
        "parameters" : [
          " * applist - A table containing hotkey details for defined applications:",
          "",
          "A configuration example:",
          "``` lua",
          "local hyper = {\"ctrl\", \"alt\", \"cmd\"}",
          "hs.loadSpoon(\"GlobalMute\")",
          "spoon.GlobalMute:configure({",
          "  unmute_background = 'file:\/\/\/Library\/Desktop%20Pictures\/Solid%20Colors\/Red%20Orange.png',",
          "  mute_background   = 'file:\/\/\/Library\/Desktop%20Pictures\/Solid%20Colors\/Turquoise%20Green.png',",
          "  enforce_desired_state = true,",
          "})",
          "spoon.GlobalMute:bindHotkeys({",
          " unmute = {hyper, \"u\"},",
          " mute   = {hyper, \"m\"},",
          " toggle = {hyper, \"space\"}",
          "})",
          "spoon.GlobalMute._logger.level = 3",
          "```"
        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:bindHotkeys()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Binds hotkeys for GlobalMute",
        "def" : "GlobalMute:bindHotkeys()"
      },
      {
        "doc" : "Set spoon level configuration",
        "stripped_doc" : [
          "Set spoon level configuration"
        ],
        "name" : "configure",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:configure(conf)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Set spoon level configuration",
        "def" : "GlobalMute:configure(conf)"
      },
      {
        "doc" : "Currently does nothing (implemented so that treating this Spoon like others won't cause errors).",
        "stripped_doc" : [
          "Currently does nothing (implemented so that treating this Spoon like others won't cause errors)."
        ],
        "name" : "init",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:init()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Currently does nothing (implemented so that treating this Spoon like others won't cause errors).",
        "def" : "GlobalMute:init()"
      },
      {
        "doc" : "Callback function when audio input events happen",
        "stripped_doc" : [
          "Callback function when audio input events happen"
        ],
        "name" : "microphone_changes",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:microphone_changes(device_uid, event_name, event_scope, event_element)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Callback function when audio input events happen",
        "def" : "GlobalMute:microphone_changes(device_uid, event_name, event_scope, event_element)"
      },
      {
        "doc" : "Mute all system sound input, force to mute",
        "stripped_doc" : [
          "Mute all system sound input, force to mute"
        ],
        "name" : "mute",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:mute(force)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Mute all system sound input, force to mute",
        "def" : "GlobalMute:mute(force)"
      },
      {
        "doc" : "Mute all system sound input, force to mute",
        "stripped_doc" : [
          "Mute all system sound input, force to mute"
        ],
        "name" : "toggle",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:toggle()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Mute all system sound input, force to mute",
        "def" : "GlobalMute:toggle()"
      },
      {
        "doc" : "UnMute all system sound input",
        "stripped_doc" : [
          "UnMute all system sound input"
        ],
        "name" : "unmute",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "GlobalMute:unmute()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "UnMute all system sound input",
        "def" : "GlobalMute:unmute()"
      }
    ],
    "Field" : [

    ],
    "name" : "GlobalMute"
  }
]
